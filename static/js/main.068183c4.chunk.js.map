{"version":3,"sources":["redux/Phonebook/phonebook-actions.js","routes.js","components/Navigation/Navigation.js","components/AuthNav/AuthNav.js","components/UserMenu/default-avatar.png","components/UserMenu/UserMenu.js","components/AppNavBar/AppNavBar.js","components/Loader/Loader.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/Phonebook/phonebook-reducer.js","redux/store.js","index.js","redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","components/UserMenu/UserMenu.module.css","components/Container/Container.js","components/AppNavBar/AppNavBar.module.css","components/Container/Container.module.css"],"names":["fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","routes","home","register","login","contacts","Navigation","isAuthenticated","useSelector","authSelectors","getIsAuthenticated","className","exact","to","activeClassName","AuthNav","UserMenu","dispatch","useDispatch","name","getUserName","onLogout","useCallback","authOperations","logOut","styles","container","src","defaultAvatar","alt","avatar","Button","type","onClick","variant","color","AppBar","Header","Spinner","height","width","connect","state","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","App","useEffect","getCurrentUser","Container","fallback","path","items","createReducer","_","payload","filter","contact","id","loading","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","document","getElementById","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","email","user","authActions","token","setError","error","axios","defaults","baseURL","headers","common","Authorization","credentials","a","post","response","data","message","logIn","getState","persistToken","get","module","exports","children"],"mappings":"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","file":"static/js/main.068183c4.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\n\nexport const fetchContactRequest = createAction(\"contacts/fetchContactRequest\");\nexport const fetchContactSuccess = createAction(\"contacts/fetchContactSuccess\");\nexport const fetchContactError = createAction(\"contacts/fetchContactError\");\n\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\nexport const addContactError = createAction(\"contacts/addContactError\");\n\nexport const deleteContactRequest = createAction(\n  \"contacts/deleteContactRequest\"\n);\nexport const deleteContactSuccess = createAction(\n  \"contacts/deleteContactSuccess\"\n);\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\n\nexport const changeFilter = createAction(\"contacts/changeFilter\");\n","const routes = {\n  home: \"/\",\n  register: \"/register\",\n  login: \"/login\",\n  contacts: \"/contacts\",\n};\nexport default routes;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport routes from \"../../routes\";\nimport { useSelector } from \"react-redux\";\nimport { authSelectors } from \"../../redux/auth\";\nimport \"./Navigation.css\";\n\nfunction Navigation() {\n  const isAuthenticated = useSelector(authSelectors.getIsAuthenticated);\n  return (\n    <nav>\n      <ul className=\"Navbar\">\n        <li>\n          <NavLink\n            exact\n            to={routes.home}\n            className=\"NavLink\"\n            activeClassName=\"NavLink--active\"\n          >\n            Home\n          </NavLink>\n        </li>\n        {isAuthenticated && (\n          <li>\n            <NavLink\n              to={routes.contacts}\n              className=\"NavLink\"\n              activeClassName=\"NavLink--active\"\n            >\n              Contacts\n            </NavLink>\n          </li>\n        )}\n      </ul>\n    </nav>\n  );\n}\n\nexport default Navigation;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst AuthNav = () => (\n  <div>\n    <ul className=\"Navbar\">\n      <li>\n        <NavLink\n          to=\"/register\"\n          exact\n          className=\"NavLink\"\n          activeClassName=\"NavLink--active\"\n        >\n          Create account\n        </NavLink>\n      </li>\n      <li>\n        <NavLink\n          to=\"/login\"\n          exact\n          className=\"NavLink\"\n          activeClassName=\"NavLink--active\"\n        >\n          Login\n        </NavLink>\n      </li>\n    </ul>\n  </div>\n);\n\nexport default AuthNav;\n","export default __webpack_public_path__ + \"static/media/default-avatar.e582e4ba.png\";","import React, { useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { authSelectors, authOperations } from \"../../redux/auth\";\nimport defaultAvatar from \"../UserMenu/default-avatar.png\";\nimport styles from \"./UserMenu.module.css\";\nimport { Button } from \"@material-ui/core\";\n\nfunction UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUserName);\n  const onLogout = useCallback(() => {\n    dispatch(authOperations.logOut());\n  }, [dispatch]);\n\n  return (\n    <div className={styles.container}>\n      <img src={defaultAvatar} alt=\"Avatar\" className={styles.avatar} />\n      <span className={styles.name}>Welcome, {name}</span>\n      <Button\n        type=\"button\"\n        onClick={onLogout}\n        variant=\"outlined\"\n        color=\"primary\"\n      >\n        Logout\n      </Button>\n    </div>\n  );\n}\n\nexport default UserMenu;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Navigation from \"../Navigation\";\nimport AuthNav from \"../AuthNav\";\nimport UserMenu from \"../UserMenu\";\nimport { authSelectors } from \"../../redux/auth\";\nimport styles from \"./AppNavBar.module.css\";\n\nfunction AppBar() {\n  const isAuthenticated = useSelector(authSelectors.getIsAuthenticated);\n\n  return (\n    <header className={styles.Header}>\n      <Navigation />\n      {isAuthenticated ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n}\n\nexport default AppBar;\n","import React from \"react\";\nimport Loader from \"react-loader-spinner\";\n\nconst Spinner = () => {\n  return (\n    <div>\n      <Loader type=\"Circles\" color=\"#FFF\" height={100} width={100} />\n    </div>\n  );\n};\nexport default Spinner;\n","import { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport authSelectors from \"../redux/auth/auth-selectors\";\n\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={(props) =>\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\n    }\n  />\n);\nconst mapStateToProps = (state) => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport authSelectors from \"../redux/auth/auth-selectors\";\n\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={(props) =>\n      isAuthenticated && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import React, { useEffect, Suspense, lazy } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Switch } from \"react-router-dom\";\nimport routes from \"./routes\";\nimport \"./styles.css\";\nimport AppBar from \"./components/AppNavBar\";\nimport Spinner from \"./components/Loader\";\nimport Container from \"./components/Container\";\nimport { authOperations } from \"./redux/auth\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport PublicRoute from \"./components/PublicRoute\";\n\nconst HomeView = lazy(() =>\n  import(\"./views/HomeView.js\" /* webpackChunkName: \"home-view\" */)\n);\nconst RegisterView = lazy(() =>\n  import(\"./views/RegisterView\" /*webpackChunkName: \"register-view\" */)\n);\nconst LoginView = lazy(() =>\n  import(\"./views/LoginView\" /*webpackChunkName: \"login-view\" */)\n);\nconst ContactsView = lazy(() =>\n  import(\"./views/ContactsView.js\" /*webpackChunkName: \"contacts-view\" */)\n);\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.getCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <>\n      <AppBar />\n      <Container>\n        <Suspense fallback={<Spinner />}>\n          <Switch>\n            <PublicRoute exact path={routes.home} component={HomeView} />\n            <PublicRoute\n              path={routes.register}\n              restricted\n              redirectTo={routes.home}\n              component={RegisterView}\n            />\n            <PublicRoute\n              path={routes.login}\n              restricted\n              redirectTo={routes.home}\n              component={LoginView}\n            />\n            <PrivateRoute\n              path={routes.contacts}\n              component={ContactsView}\n              redirectTo={routes.login}\n            />\n          </Switch>\n        </Suspense>\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} from \"./phonebook-actions\";\n\n// const contacts = [];\n\nconst items = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  // [addContactSuccess]: (state, { payload }) => {\n  //   if (state.map((contact) => contact.name).includes(payload.name)) {\n  //     return alert(`${payload.name} is already exist`);\n  //   }\n  //   return [...state, payload];\n  // },\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter((contact) => contact.id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst filter = createReducer(\"\", {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport contactsReducer from \"./Phonebook/phonebook-reducer\";\nimport { authReducer } from \"./auth\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nconst persistor = persistStore(store);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { store, persistor };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n// console.log(store);\n// console.log(store.getState());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","/* eslint-disable import/no-anonymous-default-export */\nimport { createAction } from \"@reduxjs/toolkit\";\n\nconst registerRequest = createAction(\"auth/registerRequest\");\nconst registerSuccess = createAction(\"auth/registerSuccess\");\nconst registerError = createAction(\"auth/registerError\");\n\nconst loginRequest = createAction(\"auth/loginRequest\");\nconst loginSuccess = createAction(\"auth/loginSuccess\");\nconst loginError = createAction(\"auth/loginError\");\n\nconst logoutRequest = createAction(\"auth/logoutRequest\");\nconst logoutSuccess = createAction(\"auth/logoutSuccess\");\nconst logoutError = createAction(\"auth/logoutError\");\n\nconst getCurrentUserRequest = createAction(\"auth/getCurrentUserRequest\");\nconst getCurrentUserSuccess = createAction(\"auth/getCurrentUserSuccess\");\nconst getCurrentUserError = createAction(\"auth/getCurrentUserError\");\n\nexport default {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport authActions from \"./auth-actions\";\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => initialUserState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n  [authActions.registerError]: setError,\n  [authActions.loginError]: setError,\n  [authActions.logoutError]: setError,\n  [authActions.getCurrentUserError]: setError,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [authActions.registerSuccess]: () => true,\n  [authActions.loginSuccess]: () => true,\n  [authActions.getCurrentUserSuccess]: () => true,\n  [authActions.registerError]: () => false,\n  [authActions.loginError]: () => false,\n  [authActions.getCurrentUserError]: () => false,\n  [authActions.logoutSuccess]: () => false,\n});\nexport default combineReducers({\n  user,\n  isAuthenticated,\n  token,\n  error,\n});\n","import axios from \"axios\";\nimport authActions from \"./auth-actions\";\n\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com/\";\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\nconst register = (credentials) => async (dispatch) => {\n  dispatch(authActions.registerRequest());\n  try {\n    const response = await axios.post(\"/users/signup\", credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.registerError(error.message));\n  }\n};\n\nconst logIn = (credentials) => async (dispatch) => {\n  dispatch(authActions.loginRequest());\n  try {\n    const response = await axios.post(\"/users/login\", credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.loginSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n  }\n};\n\nconst logOut = () => async (dispatch) => {\n  dispatch(authActions.logoutRequest());\n\n  try {\n    await axios.post(\"/users/logout\");\n\n    token.unset();\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n  }\n};\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistToken },\n  } = getState();\n\n  if (!persistToken) {\n    return;\n  }\n\n  token.set(persistToken);\n\n  dispatch(authActions.getCurrentUserRequest());\n\n  try {\n    const response = await axios.get(\"users/current\");\n\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n  }\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  register,\n  logIn,\n  logOut,\n  getCurrentUser,\n};\n","/* eslint-disable import/no-anonymous-default-export */\nconst getIsAuthenticated = (state) => state.auth.isAuthenticated;\n\nconst getUserName = (state) => state.auth.user.name;\n\nexport default {\n  getIsAuthenticated,\n  getUserName,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__26t03\",\"avatar\":\"UserMenu_avatar__3GpbD\",\"name\":\"UserMenu_name__1uqJg\"};","import React from \"react\";\nimport styles from \"./Container.module.css\";\n\nconst Container = ({ children }) => (\n  <div className={styles.Container}>{children}</div>\n);\n\nexport default Container;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"AppNavBar_Header__4w05V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__VUgpo\"};"],"sourceRoot":""}