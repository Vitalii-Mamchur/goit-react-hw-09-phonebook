{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/LoginView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","LoginView","dispatch","useDispatch","useState","email","password","state","setState","handleChange","useCallback","e","currentTarget","name","prev","handleSubmit","preventDefault","authOperations","logIn","className","onSubmit","autoComplete","type","onChange","placeholder","variant","color"],"mappings":"oNAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,oHI+DvFC,UA9Df,WACE,IAAMC,EAAWC,cAMjB,EAA0BC,mBAJL,CACnBC,MAAO,GACPC,SAAU,KAEZ,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAeC,uBAAY,SAACC,GAChC,MAAwBA,EAAEC,cAAlBC,EAAR,EAAQA,KAAMjB,EAAd,EAAcA,MACdY,GAAS,SAACM,GAAD,mBAAC,eACLA,GADI,kBAEND,EAAOjB,SAET,IAEGmB,EAAeL,uBACnB,SAACC,GACCA,EAAEK,iBACFd,EAASe,IAAeC,MAAMX,IAC9BC,EAAS,CAAEK,KAAM,GAAIR,MAAO,GAAIC,SAAU,OAE5C,CAACJ,EAAUK,IAGLF,EAAoBE,EAApBF,MAAOC,EAAaC,EAAbD,SAEf,OACE,qBAAKa,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,oBAAIA,UAAU,QAAd,mBACA,uBAAMC,SAAUL,EAAcI,UAAU,OAAOE,aAAa,MAA5D,UACE,wBAAOF,UAAU,QAAjB,kBAEE,uBACEG,KAAK,QACLT,KAAK,QACLjB,MAAOS,EACPkB,SAAUd,EACVe,YAAY,mBAGhB,wBAAOL,UAAU,QAAjB,qBAEE,uBACEG,KAAK,WACLT,KAAK,WACLjB,MAAOU,EACPiB,SAAUd,EACVe,YAAY,sBAGhB,cAAC,IAAD,CAAQF,KAAK,SAASG,QAAQ,YAAYC,MAAM,UAAhD","file":"static/js/login-view.94afb91f.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState, useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { authOperations } from \"../redux/auth\";\nimport \"./Views.css\";\nimport { Button } from \"@material-ui/core\";\n\nfunction LoginView() {\n  const dispatch = useDispatch();\n\n  const initialState = {\n    email: \"\",\n    password: \"\",\n  };\n  const [state, setState] = useState(initialState);\n\n  const handleChange = useCallback((e) => {\n    const { name, value } = e.currentTarget;\n    setState((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  }, []);\n\n  const handleSubmit = useCallback(\n    (e) => {\n      e.preventDefault();\n      dispatch(authOperations.logIn(state));\n      setState({ name: \"\", email: \"\", password: \"\" });\n    },\n    [dispatch, state]\n  );\n\n  const { email, password } = state;\n\n  return (\n    <div className=\"Container\">\n      <div className=\"LoginSection\">\n        <h1 className=\"Title\">Login</h1>\n        <form onSubmit={handleSubmit} className=\"form\" autoComplete=\"off\">\n          <label className=\"label\">\n            Email\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={handleChange}\n              placeholder=\"Enter email\"\n            />\n          </label>\n          <label className=\"label\">\n            Password\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={handleChange}\n              placeholder=\"Enter password\"\n            />\n          </label>\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            LOG IN\n          </Button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default LoginView;\n"],"sourceRoot":""}